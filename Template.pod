
=head1 NAME

Book::Chinese::Template - Template::Toolkit

=head1 DESCRIPTION

=head2 filter 过滤器

过滤器是指将一段文字传递进来，然后通过过滤器的函数，最后传递文字回去。我们将通过自定义过滤器来更清楚的了解过滤器的运作过程。

=head3 内置过滤器

Template 定义了一些常用的过滤器，我们将通过语法介绍来认识一些过滤器，更多更详细的介绍请参考 L<Template::Manual::Filters>

    [% # 1 %]
    [% FILTER html %]
    <script language="JavaScript" type="text/javascript">
    <!--
    document.writeln("Hello, world");
    //-->
    </script>
    [% END %]

    [% # 2 %]
    [% pi = 3.1415926536 %]
    [% pi | format('%0.3f') %]

上文是两种过滤器的写法。本质上说 FILTER 和 | 是等价的。所有用 FILTER 的地方都可以用 | 来替换，反之亦然。一种是 [% FILTER html %][% END %] 一种是 [% pi | format('%0.3f') %]

[% FILTER html %][% END %] 可以写作

    [% output = BLOCK %]
    <script language="JavaScript" type="text/javascript">
    <!--
    document.writeln("Hello, world");
    //-->
    </script>
    [% END %]
    [% output FILTER html %]

两者的效果是一样的，只是 FILTER END 在某些情况下更方便和简洁。

过滤器可以在一个变量上多次使用，类如 [% output | html | truncate(30) %]，这等同于 [% output = output | html %][% output | truncate(30) %], 这里我们使用了变量来接受过滤器返回的值。

=head3 自定义过滤器

=head2 tools 工具

=head3 tpage

L<http://search.cpan.org/perldoc?Template::Tools::tpage>

C<tpage> 用来测试一些简单的 tt2 语法还是比较轻快的。

比如你对 .replace("'", "\'") 是不是正确比较怀疑的话，你可以写个 test.tt2

  [%
    test = "A'A";
    test.replace("'", "\'");
  %]

通过命令行

  $> tpage test.tt2
  A'A

错误的话可以改改 test.tt2

  [%
    test = "A'A";
    test.replace("'", "\\\'");
  %]

再次运行

  $> tpage test.tt2
  A\'A

一切 OK, 用 tpage 你可以不用打开浏览器来检测你写的简单改变是不是正确的，非常节省时间。

tpage 还可以传递变量

    $> cat test.tt2
    [% test.replace("'", "\\\'"); %]
    $> tpage --define test="A'A" test.tt2
    A\'A
    $> tpage --define test="A'A'A" test.tt2
    A\'A\'A

=head1 AUTHOR

Fayland Lam, C<< <fayland at gmail.com> >>

=head1 COPYRIGHT & LICENSE

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
