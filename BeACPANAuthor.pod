
=head1 NAME

Book::Chinese::BeACPANAuthor - Be a CPAN Author

=head1 DESCRIPTION

本章主要描述如何成为一个 CPAN 贡献者

您有一个非常好的模块，您想与整个 Perl 社区贡献。最好的方式是将您的模块上传到 CPAN, 本章将描述如何打包，上传您的模块和一些 CPAN 社区的约定俗成。

=head2 PAUSE

上传模块到 CPAN 您首先需要到 L<http://pause.perl.org/|PAUSE> 申请一个帐号。通常帐号会在一周之内被批准（因为是志愿者自愿维护和批准整个 PAUSE 网站，所以有点慢）。

上传模块将在您通过帐号批准之后，登录 PAUSE 网站，然后点击左侧的 'Upload a file to CPAN' 来上传您的打包文件。

=head2 如何选择一个模块名

为了更好更清晰的组织 CPAN 上的所有包，您需要准确的命名您的模块。

通常请不要给你的模块取最顶层的名字（不带 :: 的包名），和谐的做法是至于某个顶层命名空间下。（当然，如果您觉得您的包将非常有用和流行的话，使用顶层名字也是可以的）

=over 4

=item * Acme:: 

大部分（非全部）的 Acme:: 模块是给人取乐，不成熟或试验的代码，不建议使用在 product 环境的代码

=item * Algorithm::

算法模块

=item * Alien::

外部程序安装文件

=item * Apache::

Apache mod_perl 相关文件

=item * App::

带有可运行脚本的包

=item * Archive::

=item * Audio::

=item * Authen::

=item * B::

perl5 core 相关模块

=item * Bio::

=item * Bundle::

老式模块合集文件，建议使用 Task::

=item * Buniess::

国家商业相关模块。类如信用卡，在线支付，身份证等相关

=item * Cache::

=item * Catalyst::, CatalystX::

=item * CGI::

=item * Class::

=item * Crypt::

=item * Data::

=item * Date::, DateTime::

=item * DBIx::

DBI 扩展模块

=item * Devel::

perl -d 相关模块

=item * Digest::

=item * Email::, Mail::

邮件相关

=item * ExtUtils::

模块安装相关工具

=item * File::

文件操作相关

=item * Finance::

银行，股票等

=item * Games::

=item * Geo::

地理位置相关

=item * Graph::, Graphics::

=item * HTML::

=item * HTTP::

=item * Image::

=item * Inline::

=item * IO::

=item * IPC::

=item * JavaScript::, JS::, JSON::

=item * Jifty::

=item * Language::

=item * Lingua::

自然语言相关模块

=item * Log::

=item * Math::

=item * Module::

模块操作相关

=item * MooseX::

=item * Net::

网络相关（参考 WWW::）

=item * Padre::

=item * Pod::, POD::

=item * POE::

=item * Proc::

=item * Regex::

=item * RT::

=item * Search::

=item * SQL::

=item * Statistics::

=item * Task::

模块合集文件，类似 Bundle::, 推荐。

=item * Template::

=item * Test::

测试模块

=item * Text::

=item * URI::

=item * WebServices::

=item * Win32::

=item * WWW::

=back

如果你还是无法找到准确的地方来放您的模块，建议你去 comp.lang.perl.modules 新闻组咨询

=head2 如何打包模块

通常我们不会将一个（或多个) pm 文件直接上传到 PAUSE, 默认的规则是打包成 .tar.gz 然后再上传。

=head3 h2xs

    > h2xs -AX -n Book::Chinese

L<h2xs> 是最古老的创建新模块的工具。请参阅 h2xs 命令帮助。

不建议使用。

=head3 L<Module::Starter>

    > cpan Module::Starter

安装 L<Module::Starter> 完毕之后，perl bin 目录将有一个 L<module-starter> 可执行文件。

    > module-starter --module=Book::Chinese --author="Fayland Lam" --email=fayland@gmail.com

默认使用 L<ExtUtils::MakeMaker> 作为 builder, 可以后面再带 '--mb' 使用 L<Module::Build> 或者带 '--mi' 来使用 L<Module::Install> 作为 builder

L<ExtUtils::MakeMaker> 是最古老和使用最广的 builder 模块。它需要和 make 配合来打包模块。

    > perl Makefile.PL
    > make
    > make manifest
    > make test
    > make dist
    > make realclean

L<Module::Build> 是用来代替 L<ExtUtils::MakeMaker> 的。它不需要 make, 可用 Perl 来完成打包工作。

    > perl Build.PL
    > perl Build
    > perl Build manifest
    > perl Build test
    > perl Build dist
    > perl Build realclean

L<Module::Install> 的打包方法和 L<ExtUtils::MakeMaker> 一样（需要 make 配合）。但不同之处在于

=over 4

=item * 可扩展，拥有丰富的插件

=item * 当 make dist 的时候，所有的 Module::Install 和它的插件文件将被放入 inc 目录随包一起打包成 tar.gz

=back

个人建议使用 L<Module::Build> 或 L<Module::Install>

=head3 L<Dist::Zilla>

    > cpan Dist::Zilla

安装 L<Dist::Zilla> 完毕之后，perl bin 目录下将有一个 dzil 的可执行文件。

    > dzil new Book::Chinese

dzil 通过 C<dist.ini> 来控制整个过程。

    > dzil test
    > dzil dist
    > dzil clean

dzil 跟 L<ExtUtils::MakeMaker>, L<Module::Build>, L<Module::Install> 或 L<Module::Starter> 都不同。

=over 4

=item * dzil 是 distribution builder 而不是 installer. 这是跟 L<Module::Install> 的最大区别。

=item * dzil 的 installer 还是可以选择 ExtUtils::MakeMaker 或 Module::Build

=item * dzil 的优点在于你只需要专注于你所要开发的代码，而不用关心 MANIFEST, Makefile.PL, Build.PL, 版本或者多余的 POD 代码（如 AUTHOR, COPYRIGHT & LICENSE）

=item * dzil 因为基于 L<Moose> 所以它的代码高度可扩展，插件很容易写

=back

=head2 包的组成

一个包通常包括

=over 4

=item * Makefile.PL, Build.PL

你必须拥有其中之一或者二者都有。建议是永远有 Makefile.PL, 使用 Module::Build 可以在 Build.PL 里设置

    create_makefile_pl => 'traditional'

=item * lib/Book/Chinese.pm

主模块。主模块里你最好有 $VERSION

=item * t/

测试目录。建议最起码有一个 00-load.t 来测试主模块的语法是合格的。

=item * README, Changes, INSTALL

所有的文件都是可选的。但是 Changes 和 README 是建议拥有的

=back

=head1 SEE ALSO

=head1 AUTHOR

Fayland Lam, C<< <fayland at gmail.com> >>

=head1 COPYRIGHT & LICENSE

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
